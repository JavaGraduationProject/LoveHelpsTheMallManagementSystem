<?xml version="1.0" encoding="UTF-8"?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 配置Mabatis映射文件 -->
<mapper namespace="com.dao.ComplainsDAO">
  <resultMap type="complains" id="complainsMap">
    <id property="complainsid" column="complainsid" />
    <result property="usersid" column="usersid" />
    <result property="title" column="title" />
    <result property="contents" column="contents" />
    <result property="addtime" column="addtime" />
    <result property="status" column="status" />
    <result property="reps" column="reps" />
    <result property="username" column="username" />
  </resultMap>
  <!-- 插入语句 DAO通过id调用此配置 -->
  <insert id="insertComplains" parameterType="complains">
    insert into complains(complainsid , usersid , title , contents , addtime , status , reps ) values(#{complainsid} , #{usersid} , #{title} , #{contents} , #{addtime}
    , #{status} , #{reps} )
  </insert>
  <!-- 更新语句 DAO通过id调用此配置 -->
  <update id="updateComplains" parameterType="complains">
    update complains set usersid=#{usersid} , title=#{title} , contents=#{contents} , addtime=#{addtime} , status=#{status} , reps=#{reps} where
    complainsid=#{complainsid}
  </update>
  <!-- 按主键删除 DAO通过id调用此配置 -->
  <delete id="deleteComplains" parameterType="String">
    delete from complains where complainsid = #{complainsid}
  </delete>
  <!-- 查询全部信息 DAO通过id调用此配置 -->
  <select id="getAllComplains" resultMap="complainsMap">
    select a.* , b.username from complains a , users b where a.usersid = b.usersid order by complainsid desc
  </select>
  <!-- 按主键查询 DAO通过id调用此配置 -->
  <select id="getComplainsById" parameterType="String" resultMap="complainsMap">
    select a.* , b.username from complains a , users b where a.usersid = b.usersid and complainsid=#{complainsid} order by complainsid desc
  </select>
  <!-- 按条件精确查询 DAO通过id调用此配置 -->
  <select id="getComplainsByCond" parameterType="complains" resultMap="complainsMap">
    select a.* , b.username from complains a , users b where a.usersid = b.usersid
    <if test="usersid != null and '' != usersid">
      and a.usersid = #{usersid}
    </if>
    <if test="title != null and '' != title">
      and a.title = #{title}
    </if>
    <if test="contents != null and '' != contents">
      and a.contents = #{contents}
    </if>
    <if test="addtime != null and '' != addtime">
      and a.addtime = #{addtime}
    </if>
    <if test="status != null and '' != status">
      and a.status = #{status}
    </if>
    <if test="reps != null and '' != reps">
      and a.reps = #{reps}
    </if>
  </select>
  <!-- 按条件模糊查询 DAO通过id调用此配置 -->
  <select id="getComplainsByLike" parameterType="complains" resultMap="complainsMap">
    select a.* , b.username from complains a , users b where a.usersid = b.usersid
    <if test="usersid != null and '' != usersid">
      and b.username like CONCAT('%', CONCAT(#{usersid}, '%'))
    </if>
    <if test="title != null and '' != title">
      and a.title like CONCAT('%', CONCAT(#{title}, '%'))
    </if>
    <if test="contents != null and '' != contents">
      and a.contents like CONCAT('%', CONCAT(#{contents}, '%'))
    </if>
    <if test="addtime != null and '' != addtime">
      and a.addtime like CONCAT('%', CONCAT(#{addtime}, '%'))
    </if>
    <if test="status != null and '' != status">
      and a.status like CONCAT('%', CONCAT(#{status}, '%'))
    </if>
    <if test="reps != null and '' != reps">
      and a.reps like CONCAT('%', CONCAT(#{reps}, '%'))
    </if>
  </select>
</mapper>





























